-- 创建用户表
CREATE TABLE IF NOT EXISTS users (
  id SERIAL PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 创建消息表
CREATE TABLE IF NOT EXISTS messages (
  id SERIAL PRIMARY KEY,
  content TEXT NOT NULL,
  user_id INTEGER REFERENCES users(id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 为消息表创建索引以提高查询性能
CREATE INDEX IF NOT EXISTS idx_messages_created_at ON messages(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_messages_user_id ON messages(user_id);

-- 设置RLS策略（行级安全性）
-- 启用RLS
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;

-- 用户只能查看自己的消息
CREATE POLICY "用户只能查看自己的消息" ON messages
  FOR SELECT USING (user_id = auth.uid());

-- 用户只能插入自己的消息
CREATE POLICY "用户只能插入自己的消息" ON messages
  FOR INSERT WITH CHECK (user_id = auth.uid());

-- 用户只能删除自己的消息
CREATE POLICY "用户只能删除自己的消息" ON messages
  FOR DELETE USING (user_id = auth.uid());

-- 用户可以查看所有用户（但只能看到用户名）
CREATE POLICY "用户可以查看所有用户信息" ON users
  FOR SELECT USING (true);

-- 允许用户注册
CREATE POLICY "允许用户注册" ON users
  FOR INSERT WITH CHECK (true);